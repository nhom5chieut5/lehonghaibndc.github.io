"use strict";(self.webpackChunkFarmext2=self.webpackChunkFarmext2||[]).push([[272],{6099:function(e,t,a){a.d(t,{Cs:function(){return i},SV:function(){return r},d2:function(){return s},hz:function(){return o}});const i=["ph_am","ph_pm","nh3","kh","temperature","salinity","clarity","oxy"],r=["no2","vibrio","mg","ca","h2s","orp","algae"];class s{constructor(e,t="",a="",i="",r="",s=0,o=0){this.values=[],this.labels=[],this.key=e,this.name=t,this.colorCls=a,this.colorStr=i,this.unit=r,this.max=s,this.min=o}}let o=(()=>{class e{mapByKey(t){switch(t){case"ph_am":e.map.unit="",e.map.colorCls="para-ph",e.map.colorStr="#CDDC39",e.map.name="ph_am",e.map.max=14,e.map.min=0;break;case"ph_pm":e.map.unit="",e.map.colorCls="para-ph",e.map.colorStr="#4CAF50",e.map.name="ph_pm",e.map.max=14,e.map.min=0;break;case"temperature":e.map.unit="\xb0C",e.map.colorCls="para-t",e.map.colorStr="#b71c1c",e.map.name="temperature",e.map.max=100,e.map.min=0;break;case"oxy":e.map.unit="mg/l",e.map.colorCls="para-oxy",e.map.colorStr="#FF6F00",e.map.name="oxygen",e.map.max=12,e.map.min=0;break;case"nh3":e.map.unit="mg/l",e.map.colorCls="para-nh3",e.map.colorStr="#b71c1c",e.map.name="nh3",e.map.max=5,e.map.min=0;break;case"salinity":e.map.unit="\u2030",e.map.colorCls="para-salinity",e.map.colorStr="#808289",e.map.name="salinity",e.map.max=35,e.map.min=0;break;case"kh":e.map.unit="mg/l",e.map.colorCls="para-kh",e.map.colorStr="#212121",e.map.name="kh",e.map.max=400,e.map.min=0;break;case"clarity":e.map.unit="cm",e.map.colorCls="para-clarity",e.map.colorStr="#BA68C8",e.map.name="clarity",e.map.max=200,e.map.min=0;break;case"no2":e.map.unit="mg/l",e.map.colorCls="para-no2",e.map.colorStr="#757575",e.map.name="no2",e.map.max=5,e.map.min=0;break;case"vibrio":e.map.unit="CFU/g",e.map.colorCls="para-vibrio",e.map.colorStr="#00C853",e.map.name="vibrio",e.map.max=1e7,e.map.min=0;break;case"mg":e.map.unit="mg/l",e.map.colorCls="para-mg",e.map.colorStr="#827717",e.map.name="magiesium",e.map.max=2e3,e.map.min=0;break;case"ca":e.map.unit="mg/l",e.map.colorCls="para-ca",e.map.colorStr="#004D40",e.map.name="calcium",e.map.max=2e3,e.map.min=0;break;case"h2s":e.map.unit="ppm",e.map.colorCls="para-h2s",e.map.colorStr="#6200EA",e.map.name="hydro_sulfua",e.map.max=5,e.map.min=0;break;case"orp":e.map.unit="mV",e.map.colorCls="para-orp",e.map.colorStr="#880E4F",e.map.name="ORP",e.map.max=1e3,e.map.min=0;break;case"algae":e.map.unit="cel/ml",e.map.colorCls="para-algae",e.map.colorStr="#1B5E20",e.map.name="algae",e.map.max=1e6,e.map.min=0}return e.map}}return e.map={unit:"",colorCls:"",colorStr:"",name:"",max:0,min:0},e})()},80272:function(e,t,a){a.d(t,{p:function(){return d}});var i=a(15189),r=a(6099),s=a(16738),o=(a(35386),a(88002)),n=a(91841),p=a(92340),c=a(37716),l=a(71239);let d=(()=>{class e{constructor(e,t,a){this.reqAPIService=e,this.dblocalService=t,this.myHTTPClient=a,this.URL_API={POND_INFO:"/manager/pond-api-info",POND_SETTING:"/manager/pond-setting-api-mobie",ALERT:"/manager/api-alert",CALENDAR:"/manager/calendar-api-mobie",UPDATE:"/manager/daily-update-full-api",POND_HISTORY:"/manager/pond-history-api-mobie",PRODUCT:"/manager/store-api",SUGGEST:"/expert/api-suggest",PROCEDURE:"/manager/daily-procedure-api-for-mobie",CHART:"/manager/daily-chart-api",SEASON_CREATE:"/manager/season-create-api",SEASON_CANCEL:"/manager/season-cancel-api",SEASON_DETAIL:"/manager/season-detail-api-mobie",SEASON_DOWNLOAD:"/manager/season-download",SEASON_SEED:"/manager/season-seed-api-mobie",SEASON_SEED_EDIT:"/manager/season-seed-edit-api",SEASON_COLLECT_ADD:"/manager/season-harvest-api-mobie",SEASON_COLLECT:"/manager/season-harvest-edit-api",SEASON_MOVE:"/manager/season-move-api-mobie",SEASON_DEPENDENTCY:"/manager/season-dependency",SEASON_SETTING:"/manager/season-setting-api",DAILY:"/manager/daily-date-paging-api",DAILY_DEPENDENCY:"/manager/daily-date-paging-dependency",DAILY_HEALTH:"/manager/daily-update-disease-api",TODAY:"/manager/daily-today-api",DAY:"/manager/daily-view-day-api",TOTAL_COST:"/manager/daily-cost",MANUFACTURER:"/manager/season-manufacturers-api",DISEASE:"/manager/disease-api",LAB_DAILY:"/manager/daily-lab-api",LAB_POND_DAILY:"/manager/daily-lab-pond-api",POND_WATER:"/manager/pond-water-api"},this.disease=[],this.seasonStart=!1,this.seasonStartTime=s(),this.seasonInfo={seedQuantity:0},this.labPermission=!1,this.pondInLab=!1}loadPond(){return this.reqAPIService.get(this.URL_API.POND_INFO+"?pcode="+this.pcode)}setPond(e){this.pond=e}setDisease(e){this.disease=e}setCode(e){this.pcode=e}setPermission(e){this.permission=e}reqSeason(){return this.reqAPIService.get(this.URL_API.SEASON_CREATE+"?action=info&pcode="+this.pcode)}saveSeason(e){return this.reqAPIService.post(this.URL_API.SEASON_CREATE+"?action=save&pcode="+this.pcode,e)}searchManufacturer(e){return this.reqAPIService.get(this.URL_API.MANUFACTURER+"?key="+e)}loadToday(){return this.reqAPIService.get(this.URL_API.TODAY+"?scode="+this.pcode)}loadDependency(){return this.reqAPIService.get(this.URL_API.SEASON_DEPENDENTCY+"?pcode="+this.pcode)}setTracking(e,t){this.numRepast=t;let a=e.replace(new RegExp("^[,]+|[,]+$","g"),"");this.trackingPamameters=a.replace(/^\,+,\,+$/g,"").split(",").slice(0,-this.numRepast),this.trackingObjects=[],this.trackingPamameters.forEach(e=>{let t=(new r.hz).mapByKey(e);this.trackingObjects.push(new r.d2(e,t.name,t.colorCls,t.colorStr,t.unit,t.max,t.min))})}reqSeasonCancel(e){return this.reqAPIService.post(this.URL_API.SEASON_CANCEL+"?pcode="+this.pcode,e)}reqSeasonSeed(e){return this.reqAPIService.postApiWithFile("",e,"&pcode="+this.pcode,this.URL_API.SEASON_SEED)}reqSeasonSeedEdit(e,t){return this.reqAPIService.postApiWithFile("edit",e,"&pcode="+this.pcode+"&id="+t,this.URL_API.SEASON_SEED_EDIT)}reqSeasonCollect(e){return this.reqAPIService.postApiWithFile("",e,"&pcode="+this.pcode,this.URL_API.SEASON_COLLECT_ADD)}reqSeasonCollectEdit(e,t){return this.reqAPIService.postApiWithFile("edit",e,"&pcode="+this.pcode+"&id="+t,this.URL_API.SEASON_COLLECT)}reqSeasonCollectInfo(e){return this.reqAPIService.get(this.URL_API.SEASON_COLLECT+"?action=get&pcode="+this.pcode+"&id="+e)}getTargetPonds(){return this.reqAPIService.get(this.URL_API.SEASON_MOVE+"?action=get-pond-targers&pcode="+this.pcode)}reqSeasonMove(e){return this.reqAPIService.post(this.URL_API.SEASON_MOVE+"?action=add&pcode="+this.pcode,e)}getHistory(){return this.reqAPIService.get(this.URL_API.POND_HISTORY+"?action=get-pond-history&pcode="+this.pcode)}reqSeasonDetail(e){return this.reqAPIService.get(this.URL_API.SEASON_DETAIL+"?action=detail&scode="+e)}getListItemUsed(e,t){return this.reqAPIService.get(this.URL_API.SEASON_DETAIL+"?action=listItemUsed&scode="+e+"&type="+t)}getProductUsed(e,t,a){return this.reqAPIService.get(this.URL_API.SEASON_DETAIL+"?action=detailItemUsed&scode="+e+"&type="+t+"&product_id="+a)}getWeight(){return this.reqAPIService.get(this.URL_API.SEASON_DETAIL+"?action=getWeight&scode="+this.pond.current_season)}getListExchange(){return this.reqAPIService.get(this.URL_API.SEASON_DETAIL+"?action=listWaterExchange&scode="+this.pond.current_season)}downloadDaily(e){return this.reqAPIService.downloadFile(this.URL_API.SEASON_DOWNLOAD+"?scode="+e).pipe()}getAlertList(e=0){return this.reqAPIService.get(this.URL_API.ALERT+"?action=list&pcode="+this.pcode+"&page="+e)}getAlertNow(e=0){return this.reqAPIService.get(this.URL_API.ALERT+"?action=now&pcode="+this.pcode+"&page="+e)}getSuggestNow(e=0){return this.reqAPIService.get(this.URL_API.SUGGEST+"?action=now&code="+this.pcode+"&page="+e)}getSuggestList(e=0){return this.reqAPIService.get(this.URL_API.SUGGEST+"?action=list&code="+this.pcode+"&page="+e)}getProcedure(){return this.reqAPIService.get(this.URL_API.PROCEDURE+"?action=list&scode="+this.pcode)}getCalendarList(e){return this.reqAPIService.get(this.URL_API.CALENDAR+"?action=list-date&pid="+this.pcode+"&date="+e)}doneTodo(e){return this.reqAPIService.get(this.URL_API.CALENDAR+"?action=done&item="+e)}createNotExistDay(e=null){return null===e&&(e=s().format("YYYY-MM-DD")),{algae:null,ca:null,clarity:null,cost:null,cost_blend:null,cost_dc:null,cost_enviro:null,cost_other:null,cost_total:null,date:e,edit_time:null,feed_cost:null,feed_incremental:null,feed_today:null,h2s:null,id:null,income:null,individuals:null,kh:null,loss:null,mg:null,nh3:null,no2:null,note_general:null,note_health:null,orp:null,oxy:null,ph_am:null,ph_pm:null,pond_id:null,pond_times_id:null,price:null,quantity:null,salinity:null,temperature:null,time:null,user_id:null,vibrio:null,weight:null,enviroment:[],feed:[],blend:[]}}destroy(){this.pcode=null,this.pond=null,this.permission=null,this.trackingPamameters=null,this.seasonStart=null,this.numRepast=null,this.trackingObjects=null,this.products=null}quickUpdateParam(e,t){return this.reqAPIService.post(this.URL_API.UPDATE+"?pcode="+this.pcode,{parameter:e,date:t})}fullUpdate(e){return this.reqAPIService.post(this.URL_API.UPDATE+"?pcode="+this.pcode,e).pipe()}updateHealth(e){return this.reqAPIService.post(this.URL_API.DAILY_HEALTH+"?pcode="+this.pcode,e).pipe()}loadParamDaily(e,t){let a=this.trackingPamameters.join();return this.reqAPIService.get(this.URL_API.CHART+"?scode="+this.pcode+"&date="+e+"&limit="+t+"&param="+a)}loadDailyPaging(e,t){return this.reqAPIService.get(this.URL_API.DAILY+"?scode="+this.pcode+"&date="+t+"&p="+e.pageIndex+"&s="+e.pageSize)}loadDailyDependency(e,t,a){return this.reqAPIService.get(this.URL_API.DAILY_DEPENDENCY+"?action="+e+"&scode="+this.pcode+"&date="+a+"&p="+t.pageIndex+"&s="+t.pageSize)}loadDay(e){return this.reqAPIService.get(this.URL_API.DAY+"?scode="+this.pcode+"&date="+e)}getTotalCost(){return this.reqAPIService.get(this.URL_API.TOTAL_COST+"?pcode="+this.pcode+"&action=total")}loadProducts(){return this.reqAPIService.get(this.URL_API.PRODUCT+"?pcode="+this.pcode+"&action=productInStore").subscribe(e=>{1==e.status&&(this.products=e.data)})}checkInventory(e){return this.reqAPIService.post(this.URL_API.PRODUCT+"?pcode="+this.pcode+"&action=checkInventory",{data:e})}updateInfo(e){return this.reqAPIService.post(this.URL_API.POND_SETTING+"?action=updateInfo&pcode="+this.pcode,e)}updatePrivate(e){return this.reqAPIService.post(this.URL_API.POND_SETTING+"?action=edit&pcode="+this.pcode,e)}getSeting(){return this.reqAPIService.get(this.URL_API.POND_SETTING+"?action=get-pond-setting&pcode="+this.pcode)}removePermission(e,t){return this.reqAPIService.get(this.URL_API.POND_SETTING+"?action=remove-permission&pcode="+this.pcode+"&position="+t+"&user_id="+e)}deletePond(e){return this.reqAPIService.post(this.URL_API.POND_SETTING+"?action=delete&pcode="+this.pcode,e)}getCurrentPrice(e,t){return this.reqAPIService.getOutSite("https://tepbac.com/price/farmext?action=match&sp="+e+"&zid="+t)}getListDisease(){return this.reqAPIService.get(this.URL_API.DISEASE+"?action=list&pcode="+this.pcode)}getListSynonym(){return this.reqAPIService.get(this.URL_API.DISEASE+"?action=list&pcode="+this.pcode)}saveProcessDisease(e){return this.reqAPIService.post(this.URL_API.DISEASE+"?action=process&pcode="+this.pcode,e)}savePhotoDaily(e){return this.reqAPIService.post("/manager/upload-image-daily-api?pcode="+this.pcode,e)}uploadPhoto(e,t){let a="/manager/upload-image-daily-api",i={reportProgress:!0,headers:new n.WM,params:new n.LE};return i.headers=this.reqAPIService.getHeaderToken(),i.headers=i.headers.delete("Content-Type"),i.params=i.params.append("pcode",this.pcode),console.log(i.headers),new n.aW("POST",encodeURI(p.bl.SITE_PATH+a),e,i),this.myHTTPClient.post(encodeURI(p.bl.SITE_PATH+a),e,i)}updateConfigBlock(e,t){return this.reqAPIService.post(this.URL_API.SEASON_DETAIL+"?action=update-config&scode="+e,t)}updateConfigSeason(e,t){return this.reqAPIService.post(this.URL_API.SEASON_SETTING+"?action="+e+"&pcode="+this.pcode,t)}getListOtherCost(e){return this.reqAPIService.get(this.URL_API.SEASON_DETAIL+"?action=listCostOther&scode="+e)}getApiStore(e="",t="",a=""){return this.reqAPIService.get(a+="?action="+e+"&pcode="+this.pcode+t).pipe((0,o.U)(e=>e))}postApiStore(e="",t={},a="",i=""){return this.reqAPIService.post(i+="?action="+e+"&pcode="+this.pcode+a,t).pipe((0,o.U)(e=>e))}loadDailyLab(e){return this.postApiStore("getDaily",{date:e},"",this.URL_API.LAB_DAILY)}loadDailyLabInPond(e){return this.reqAPIService.get(this.URL_API.LAB_POND_DAILY+"?pcode="+this.pond.code+"&date="+e)}loadLabOptions(){return this.getApiStore("getOptions","",this.URL_API.LAB_DAILY)}addDailyLab(e){return this.postApiStore("save",e,"",this.URL_API.LAB_DAILY)}listSpecies(){return this.getApiStore("save","",this.URL_API.LAB_DAILY)}listWater(){return this.getApiStore("getList","",this.URL_API.POND_WATER)}listPondTargets(){return this.getApiStore("getPondTargets","",this.URL_API.POND_WATER)}addStock(e){return this.postApiStore("add-stock",e,"",this.URL_API.POND_WATER)}editStock(e,t){return this.postApiStore("edit-stock",t,"&id="+e,this.URL_API.POND_WATER)}addExchange(e){return this.postApiStore("exchange",e,"",this.URL_API.POND_WATER)}editExchange(e,t){return this.postApiStore("edit-exchange",t,"&id="+e,this.URL_API.POND_WATER)}}return e.\u0275fac=function(t){return new(t||e)(c.LFG(i.$),c.LFG(l.T),c.LFG(n.eN))},e.\u0275prov=c.Yz7({token:e,factory:e.\u0275fac,providedIn:"root"}),e})()}}]);